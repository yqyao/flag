name: "ResNet-18"  
input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 300
  dim: 300
}
  
layer {  
    bottom: "data"  
    top: "conv1"  
    name: "conv1"  
    type: "Convolution"  
    convolution_param {  
        num_output: 64  
        kernel_size: 7  
        pad: 3  
        stride: 2  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false 
    }  
}  
  
layer {  
    bottom: "conv1"  
    top: "conv1"  
    name: "bn_conv1"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "conv1"  
    top: "conv1"  
    name: "scale_conv1"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "conv1"  
    top: "conv1"  
    name: "conv1_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "conv1"  
    top: "pool1"  
    name: "pool1"  
    type: "Pooling"  
    pooling_param {  
        kernel_size: 3  
        stride: 2  
        pool: MAX  
    }  
}  
  
layer {  
    bottom: "pool1"  
    top: "res2a_branch1"  
    name: "res2a_branch1"  
    type: "Convolution"  
    convolution_param {  
        num_output: 64  
        kernel_size: 1  
        pad: 0  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res2a_branch1"  
    top: "res2a_branch1"  
    name: "bn2a_branch1"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res2a_branch1"  
    top: "res2a_branch1"  
    name: "scale2a_branch1"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "pool1"  
    top: "res2a_branch2a"  
    name: "res2a_branch2a"  
    type: "Convolution"  
    convolution_param {  
        num_output: 64  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res2a_branch2a"  
    top: "res2a_branch2a"  
    name: "bn2a_branch2a"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res2a_branch2a"  
    top: "res2a_branch2a"  
    name: "scale2a_branch2a"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res2a_branch2a"  
    top: "res2a_branch2a"  
    name: "res2a_branch2a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res2a_branch2a"  
    top: "res2a_branch2b"  
    name: "res2a_branch2b"  
    type: "Convolution"  
    convolution_param {  
        num_output: 64  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res2a_branch2b"  
    top: "res2a_branch2b"  
    name: "bn2a_branch2b"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res2a_branch2b"  
    top: "res2a_branch2b"  
    name: "scale2a_branch2b"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res2a_branch1"  
    bottom: "res2a_branch2b"  
    top: "res2a"  
    name: "res2a"  
    type: "Eltwise"  
    eltwise_param {  
        operation: SUM  
    }  
}  
  
layer {  
    bottom: "res2a"  
    top: "res2a"  
    name: "res2a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res2a"  
    top: "res2b_branch2a"  
    name: "res2b_branch2a"  
    type: "Convolution"  
    convolution_param {  
        num_output: 64  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res2b_branch2a"  
    top: "res2b_branch2a"  
    name: "bn2b_branch2a"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res2b_branch2a"  
    top: "res2b_branch2a"  
    name: "scale2b_branch2a"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res2b_branch2a"  
    top: "res2b_branch2a"  
    name: "res2b_branch2a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res2b_branch2a"  
    top: "res2b_branch2b"  
    name: "res2b_branch2b"  
    type: "Convolution"  
    convolution_param {  
        num_output: 64  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res2b_branch2b"  
    top: "res2b_branch2b"  
    name: "bn2b_branch2b"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res2b_branch2b"  
    top: "res2b_branch2b"  
    name: "scale2b_branch2b"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res2a"  
    bottom: "res2b_branch2b"  
    top: "res2b"  
    name: "res2b"  
    type: "Eltwise"  
    eltwise_param {  
        operation: SUM  
    }  
}  
  
layer {  
    bottom: "res2b"  
    top: "res2b"  
    name: "res2b_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res2b"  
    top: "res3a_branch1"  
    name: "res3a_branch1"  
    type: "Convolution"  
    convolution_param {  
        num_output: 128  
        kernel_size: 1  
        pad: 0  
        stride: 2  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res3a_branch1"  
    top: "res3a_branch1"  
    name: "bn3a_branch1"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res3a_branch1"  
    top: "res3a_branch1"  
    name: "scale3a_branch1"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res2b"  
    top: "res3a_branch2a"  
    name: "res3a_branch2a"  
    type: "Convolution"  
    convolution_param {  
        num_output: 128  
        kernel_size: 3  
        pad: 1  
        stride: 2  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res3a_branch2a"  
    top: "res3a_branch2a"  
    name: "bn3a_branch2a"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res3a_branch2a"  
    top: "res3a_branch2a"  
    name: "scale3a_branch2a"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res3a_branch2a"  
    top: "res3a_branch2a"  
    name: "res3a_branch2a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res3a_branch2a"  
    top: "res3a_branch2b"  
    name: "res3a_branch2b"  
    type: "Convolution"  
    convolution_param {  
        num_output: 128  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res3a_branch2b"  
    top: "res3a_branch2b"  
    name: "bn3a_branch2b"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res3a_branch2b"  
    top: "res3a_branch2b"  
    name: "scale3a_branch2b"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res3a_branch1"  
    bottom: "res3a_branch2b"  
    top: "res3a"  
    name: "res3a"  
    type: "Eltwise"  
    eltwise_param {  
        operation: SUM  
    }  
}  
  
layer {  
    bottom: "res3a"  
    top: "res3a"  
    name: "res3a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res3a"  
    top: "res3b_branch2a"  
    name: "res3b_branch2a"  
    type: "Convolution"  
    convolution_param {  
        num_output: 128  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res3b_branch2a"  
    top: "res3b_branch2a"  
    name: "bn3b_branch2a"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res3b_branch2a"  
    top: "res3b_branch2a"  
    name: "scale3b_branch2a"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res3b_branch2a"  
    top: "res3b_branch2a"  
    name: "res3b_branch2a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res3b_branch2a"  
    top: "res3b_branch2b"  
    name: "res3b_branch2b"  
    type: "Convolution"  
    convolution_param {  
        num_output: 128  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res3b_branch2b"  
    top: "res3b_branch2b"  
    name: "bn3b_branch2b"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res3b_branch2b"  
    top: "res3b_branch2b"  
    name: "scale3b_branch2b"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res3a"  
    bottom: "res3b_branch2b"  
    top: "res3b"  
    name: "res3b"  
    type: "Eltwise"  
    eltwise_param {  
        operation: SUM  
    }  
}  
  
layer {  
    bottom: "res3b"  
    top: "res3b"  
    name: "res3b_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res3b"  
    top: "res4a_branch1"  
    name: "res4a_branch1"  
    type: "Convolution"  
    convolution_param {  
        num_output: 256  
        kernel_size: 1  
        pad: 0  
        stride: 2  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res4a_branch1"  
    top: "res4a_branch1"  
    name: "bn4a_branch1"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res4a_branch1"  
    top: "res4a_branch1"  
    name: "scale4a_branch1"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res3b"  
    top: "res4a_branch2a"  
    name: "res4a_branch2a"  
    type: "Convolution"  
    convolution_param {  
        num_output: 256  
        kernel_size: 3  
        pad: 1  
        stride: 2  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res4a_branch2a"  
    top: "res4a_branch2a"  
    name: "bn4a_branch2a"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res4a_branch2a"  
    top: "res4a_branch2a"  
    name: "scale4a_branch2a"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res4a_branch2a"  
    top: "res4a_branch2a"  
    name: "res4a_branch2a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res4a_branch2a"  
    top: "res4a_branch2b"  
    name: "res4a_branch2b"  
    type: "Convolution"  
    convolution_param {  
        num_output: 256  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res4a_branch2b"  
    top: "res4a_branch2b"  
    name: "bn4a_branch2b"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res4a_branch2b"  
    top: "res4a_branch2b"  
    name: "scale4a_branch2b"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res4a_branch1"  
    bottom: "res4a_branch2b"  
    top: "res4a"  
    name: "res4a"  
    type: "Eltwise"  
    eltwise_param {  
        operation: SUM  
    }  
}  
  
layer {  
    bottom: "res4a"  
    top: "res4a"  
    name: "res4a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res4a"  
    top: "res4b_branch2a"  
    name: "res4b_branch2a"  
    type: "Convolution"  
    convolution_param {  
        num_output: 256  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res4b_branch2a"  
    top: "res4b_branch2a"  
    name: "bn4b_branch2a"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res4b_branch2a"  
    top: "res4b_branch2a"  
    name: "scale4b_branch2a"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res4b_branch2a"  
    top: "res4b_branch2a"  
    name: "res4b_branch2a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res4b_branch2a"  
    top: "res4b_branch2b"  
    name: "res4b_branch2b"  
    type: "Convolution"  
    convolution_param {  
        num_output: 256  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res4b_branch2b"  
    top: "res4b_branch2b"  
    name: "bn4b_branch2b"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res4b_branch2b"  
    top: "res4b_branch2b"  
    name: "scale4b_branch2b"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res4a"  
    bottom: "res4b_branch2b"  
    top: "res4b"  
    name: "res4b"  
    type: "Eltwise"  
    eltwise_param {  
        operation: SUM  
    }  
}  
  
layer {  
    bottom: "res4b"  
    top: "res4b"  
    name: "res4b_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res4b"  
    top: "res5a_branch1"  
    name: "res5a_branch1"  
    type: "Convolution"  
    convolution_param {  
        num_output: 512  
        kernel_size: 1  
        pad: 0  
        stride: 1 
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res5a_branch1"  
    top: "res5a_branch1"  
    name: "bn5a_branch1"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res5a_branch1"  
    top: "res5a_branch1"  
    name: "scale5a_branch1"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res4b"  
    top: "res5a_branch2a"  
    name: "res5a_branch2a"  
    type: "Convolution"  
    convolution_param {  
        num_output: 512  
        kernel_size: 3  
        pad: 2  
        stride: 1
        dilation: 2  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res5a_branch2a"  
    top: "res5a_branch2a"  
    name: "bn5a_branch2a"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res5a_branch2a"  
    top: "res5a_branch2a"  
    name: "scale5a_branch2a"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res5a_branch2a"  
    top: "res5a_branch2a"  
    name: "res5a_branch2a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res5a_branch2a"  
    top: "res5a_branch2b"  
    name: "res5a_branch2b"  
    type: "Convolution"  
    convolution_param {  
        num_output: 512  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res5a_branch2b"  
    top: "res5a_branch2b"  
    name: "bn5a_branch2b"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res5a_branch2b"  
    top: "res5a_branch2b"  
    name: "scale5a_branch2b"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res5a_branch1"  
    bottom: "res5a_branch2b"  
    top: "res5a"  
    name: "res5a"  
    type: "Eltwise"  
    eltwise_param {  
        operation: SUM  
    }  
}  
  
layer {  
    bottom: "res5a"  
    top: "res5a"  
    name: "res5a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res5a"  
    top: "res5b_branch2a"  
    name: "res5b_branch2a"  
    type: "Convolution"  
    convolution_param {  
        num_output: 512  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res5b_branch2a"  
    top: "res5b_branch2a"  
    name: "bn5b_branch2a"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res5b_branch2a"  
    top: "res5b_branch2a"  
    name: "scale5b_branch2a"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res5b_branch2a"  
    top: "res5b_branch2a"  
    name: "res5b_branch2a_relu"  
    type: "ReLU"  
}  
  
layer {  
    bottom: "res5b_branch2a"  
    top: "res5b_branch2b"  
    name: "res5b_branch2b"  
    type: "Convolution"  
    convolution_param {  
        num_output: 512  
        kernel_size: 3  
        pad: 1  
        stride: 1  
        weight_filler {  
            type: "msra"  
        }  
        bias_term: false  
  
    }  
}  
  
layer {  
    bottom: "res5b_branch2b"  
    top: "res5b_branch2b"  
    name: "bn5b_branch2b"  
    type: "BatchNorm"  
      
}  
  
layer {  
    bottom: "res5b_branch2b"  
    top: "res5b_branch2b"  
    name: "scale5b_branch2b"  
    type: "Scale"  
    scale_param {  
        bias_term: true  
    }  
}  
  
layer {  
    bottom: "res5a"  
    bottom: "res5b_branch2b"  
    top: "res5b"  
    name: "res5b"  
    type: "Eltwise"  
    eltwise_param {  
        operation: SUM  
    }  
}  
  
layer {  
    bottom: "res5b"  
    top: "res5b"  
    name: "res5b_relu"  
    type: "ReLU"  
}  

layer {
  name: "conv6_1"
  type: "Convolution"
  bottom: "res5b"
  top: "conv6_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv6_1_bn"
  type: "BatchNorm"
  bottom: "conv6_1"
  top: "conv6_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
    eps: 0.001
  }
}
layer {
  name: "conv6_1_scale"
  type: "Scale"
  bottom: "conv6_1"
  top: "conv6_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv6_1_relu"
  type: "ReLU"
  bottom: "conv6_1"
  top: "conv6_1"
}
layer {
  name: "conv6_2"
  type: "Convolution"
  bottom: "conv6_1"
  top: "conv6_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv6_2_bn"
  type: "BatchNorm"
  bottom: "conv6_2"
  top: "conv6_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
    eps: 0.001
  }
}
layer {
  name: "conv6_2_scale"
  type: "Scale"
  bottom: "conv6_2"
  top: "conv6_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv6_2_relu"
  type: "ReLU"
  bottom: "conv6_2"
  top: "conv6_2"
}
layer {
  name: "conv7_1"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv7_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv7_1_bn"
  type: "BatchNorm"
  bottom: "conv7_1"
  top: "conv7_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
    eps: 0.001
  }
}
layer {
  name: "conv7_1_scale"
  type: "Scale"
  bottom: "conv7_1"
  top: "conv7_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv7_1_relu"
  type: "ReLU"
  bottom: "conv7_1"
  top: "conv7_1"
}
layer {
  name: "conv7_2"
  type: "Convolution"
  bottom: "conv7_1"
  top: "conv7_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv7_2_bn"
  type: "BatchNorm"
  bottom: "conv7_2"
  top: "conv7_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
    eps: 0.001
  }
}
layer {
  name: "conv7_2_scale"
  type: "Scale"
  bottom: "conv7_2"
  top: "conv7_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv7_2_relu"
  type: "ReLU"
  bottom: "conv7_2"
  top: "conv7_2"
}

layer {
  name: "conv8_1"
  type: "Convolution"
  bottom: "conv7_2"
  top: "conv8_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv8_1_bn"
  type: "BatchNorm"
  bottom: "conv8_1"
  top: "conv8_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
    eps: 0.001
  }
}
layer {
  name: "conv8_1_scale"
  type: "Scale"
  bottom: "conv8_1"
  top: "conv8_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv8_1_relu"
  type: "ReLU"
  bottom: "conv8_1"
  top: "conv8_1"
}
layer {
  name: "conv8_2"
  type: "Convolution"
  bottom: "conv8_1"
  top: "conv8_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv8_2_bn"
  type: "BatchNorm"
  bottom: "conv8_2"
  top: "conv8_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
    eps: 0.001
  }
}
layer {
  name: "conv8_2_scale"
  type: "Scale"
  bottom: "conv8_2"
  top: "conv8_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv8_2_relu"
  type: "ReLU"
  bottom: "conv8_2"
  top: "conv8_2"
}

layer {
  name: "res3b_norm"
  type: "Normalize"
  bottom: "res3b"
  top: "res3b_norm"
  norm_param {
    across_spatial: false
    scale_filler {
      type: "constant"
      value: 20
    }
    channel_shared: false
  }
}

layer {
  name: "res3b_mbox_loc"
  type: "Convolution"
  bottom: "res3b_norm"
  top: "res3b_norm_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3b_norm_mbox_loc_perm"
  type: "Permute"
  bottom: "res3b_norm_mbox_loc"
  top: "res3b_norm_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "res3b_norm_mbox_loc_flat"
  type: "Flatten"
  bottom: "res3b_norm_mbox_loc_perm"
  top: "res3b_norm_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "res3b_norm_mbox_conf"
  type: "Convolution"
  bottom: "res3b_norm"
  top: "res3b_norm_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8 #84
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3b_norm_mbox_conf_perm"
  type: "Permute"
  bottom: "res3b_norm_mbox_conf"
  top: "res3b_norm_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "res3b_norm_mbox_conf_flat"
  type: "Flatten"
  bottom: "res3b_norm_mbox_conf_perm"
  top: "res3b_norm_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "res3b_norm_mbox_priorbox"
  type: "PriorBox"
  bottom: "res3b_norm"
  bottom: "data"
  top: "res3b_norm_mbox_priorbox"
  prior_box_param {
    min_size: 30
    max_size: 60
    aspect_ratio: 2
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 8
    offset: 0.5
  }
}
layer {
  name: "res5b_mbox_loc"
  type: "Convolution"
  bottom: "res5b"
  top: "res5b_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5b_mbox_loc_perm"
  type: "Permute"
  bottom: "res5b_mbox_loc"
  top: "res5b_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "res5b_mbox_loc_flat"
  type: "Flatten"
  bottom: "res5b_mbox_loc_perm"
  top: "res5b_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "res5b_mbox_conf"
  type: "Convolution"
  bottom: "res5b"
  top: "res5b_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12 # 126
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5b_mbox_conf_perm"
  type: "Permute"
  bottom: "res5b_mbox_conf"
  top: "res5b_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "res5b_mbox_conf_flat"
  type: "Flatten"
  bottom: "res5b_mbox_conf_perm"
  top: "res5b_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "res5b_mbox_priorbox"
  type: "PriorBox"
  bottom: "res5b"
  bottom: "data"
  top: "res5b_mbox_priorbox"
  prior_box_param {
    min_size: 60
    max_size: 111
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 16
    offset: 0.5
  }
}
layer {
  name: "conv6_2_mbox_loc"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv6_2_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_mbox_loc_perm"
  type: "Permute"
  bottom: "conv6_2_mbox_loc"
  top: "conv6_2_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv6_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv6_2_mbox_loc_perm"
  top: "conv6_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv6_2_mbox_conf"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv6_2_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12 # 126
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_mbox_conf_perm"
  type: "Permute"
  bottom: "conv6_2_mbox_conf"
  top: "conv6_2_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv6_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv6_2_mbox_conf_perm"
  top: "conv6_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv6_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv6_2"
  bottom: "data"
  top: "conv6_2_mbox_priorbox"
  prior_box_param {
    min_size: 111
    max_size: 162
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step_w: 32
    step_h: 32
    offset: 0.5
  }
}
layer {
  name: "conv7_2_mbox_loc"
  type: "Convolution"
  bottom: "conv7_2"
  top: "conv7_2_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_mbox_loc_perm"
  type: "Permute"
  bottom: "conv7_2_mbox_loc"
  top: "conv7_2_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv7_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv7_2_mbox_loc_perm"
  top: "conv7_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv7_2_mbox_conf"
  type: "Convolution"
  bottom: "conv7_2"
  top: "conv7_2_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12 # 126
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_mbox_conf_perm"
  type: "Permute"
  bottom: "conv7_2_mbox_conf"
  top: "conv7_2_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv7_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv7_2_mbox_conf_perm"
  top: "conv7_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv7_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv7_2"
  bottom: "data"
  top: "conv7_2_mbox_priorbox"
  prior_box_param {
    min_size: 162
    max_size: 213
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step_w: 64
    step_h: 64
    offset: 0.5
  }
}
layer {
  name: "conv8_2_mbox_loc"
  type: "Convolution"
  bottom: "conv8_2"
  top: "conv8_2_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_2_mbox_loc_perm"
  type: "Permute"
  bottom: "conv8_2_mbox_loc"
  top: "conv8_2_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv8_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv8_2_mbox_loc_perm"
  top: "conv8_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv8_2_mbox_conf"
  type: "Convolution"
  bottom: "conv8_2"
  top: "conv8_2_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 12 # 84
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_2_mbox_conf_perm"
  type: "Permute"
  bottom: "conv8_2_mbox_conf"
  top: "conv8_2_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv8_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv8_2_mbox_conf_perm"
  top: "conv8_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv8_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv8_2"
  bottom: "data"
  top: "conv8_2_mbox_priorbox"
  prior_box_param {
    min_size: 213
    max_size: 264
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step_w: 100
    step_h: 100
    offset: 0.5
  }
}



layer {
  name: "mbox_loc"
  type: "Concat"
  bottom: "res3b_norm_mbox_loc_flat"
  bottom: "res5b_mbox_loc_flat"
  bottom: "conv6_2_mbox_loc_flat"
  bottom: "conv7_2_mbox_loc_flat"
  bottom: "conv8_2_mbox_loc_flat"
  top: "mbox_loc"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_conf"
  type: "Concat"
  bottom: "res3b_norm_mbox_conf_flat"
  bottom: "res5b_mbox_conf_flat"
  bottom: "conv6_2_mbox_conf_flat"
  bottom: "conv7_2_mbox_conf_flat"
  bottom: "conv8_2_mbox_conf_flat"
  top: "mbox_conf"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_priorbox"
  type: "Concat"
  bottom: "res3b_norm_mbox_priorbox"
  bottom: "res5b_mbox_priorbox"
  bottom: "conv6_2_mbox_priorbox"
  bottom: "conv7_2_mbox_priorbox"
  bottom: "conv8_2_mbox_priorbox"
  top: "mbox_priorbox"
  concat_param {
    axis: 2
  }
}

layer {
  name: "mbox_conf_reshape"
  type: "Reshape"
  bottom: "mbox_conf"
  top: "mbox_conf_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: -1
      dim: 2
    }
  }
}
layer {
  name: "mbox_conf_softmax"
  type: "Softmax"
  bottom: "mbox_conf_reshape"
  top: "mbox_conf_softmax"
  softmax_param {
    axis: 2
  }
}
layer {
  name: "mbox_conf_flatten"
  type: "Flatten"
  bottom: "mbox_conf_softmax"
  top: "mbox_conf_flatten"
  flatten_param {
    axis: 1
  }
}

layer {
  name: "detection_out"
  type: "DetectionOutput"
  bottom: "mbox_loc"
  bottom: "mbox_conf_flatten"
  bottom: "mbox_priorbox"
  top: "detection_out"
  include {
    phase: TEST
  }
  detection_output_param {
    num_classes: 2 # 21
    share_location: true
    background_label_id: 0
    nms_param {
      nms_threshold: 0.45
      top_k: 400
    }
    code_type: CENTER_SIZE
    keep_top_k: 200
    confidence_threshold: 0.01
  }
}
